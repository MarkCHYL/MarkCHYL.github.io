<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mark的私人博客</title>
  <icon>https://markchyl.github.io/icon.png</icon>
  <subtitle>数风流人物，还看今朝</subtitle>
  <link href="https://markchyl.github.io/atom.xml" rel="self"/>
  
  <link href="https://markchyl.github.io/"/>
  <updated>2025-01-14T11:09:06.000Z</updated>
  <id>https://markchyl.github.io/</id>
  
  <author>
    <name>Mark先生</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mac上配置安装多个版本的python</title>
    <link href="https://markchyl.github.io/2025/01/14/Mac%E4%B8%8A%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84python/"/>
    <id>https://markchyl.github.io/2025/01/14/Mac%E4%B8%8A%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84python/</id>
    <published>2025-01-14T11:09:06.000Z</published>
    <updated>2025-01-14T11:09:06.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在M2 MacBook Pro上配置安装多个版本的Python有以下几种方法：&lt;/p&gt;
&lt;h3 id=&quot;使用pyenv&quot;&gt;&lt;a href=&quot;#使用pyenv&quot; class=&quot;headerlink&quot; title=&quot;使用pyenv&quot;&gt;&lt;/a&gt;使用pyenv&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;安装Homebrew&lt;/strong&gt;：如果尚未安装，在终端中运行以下命令：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x2F;bin&amp;#x2F;bash -c &amp;quot;$(curl -fsSL https:&amp;#x2F;&amp;#x2F;raw.githubusercontent.com&amp;#x2F;Homebrew&amp;#x2F;install&amp;#x2F;HEAD&amp;#x2F;install.sh)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://markchyl.github.io/categories/Python/"/>
    
    
    <category term="环境" scheme="https://markchyl.github.io/tags/%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>M2 Macbook Pro 上安装 Anaconda</title>
    <link href="https://markchyl.github.io/2025/01/14/M2-Macbook-Pro-%E4%B8%8A%E5%AE%89%E8%A3%85-Anaconda/"/>
    <id>https://markchyl.github.io/2025/01/14/M2-Macbook-Pro-%E4%B8%8A%E5%AE%89%E8%A3%85-Anaconda/</id>
    <published>2025-01-14T08:08:21.000Z</published>
    <updated>2025-01-14T08:08:21.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;以下是在M2 Macbook Pro上安装Anaconda的详细步骤：&lt;/p&gt;
&lt;h3 id=&quot;下载安装包&quot;&gt;&lt;a href=&quot;#下载安装包&quot; class=&quot;headerlink&quot; title=&quot;下载安装包&quot;&gt;&lt;/a&gt;下载安装包&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;访问&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL3Byb2R1Y3RzL2Rpc3RyaWJ1dGlvbiNkb3dubG9hZC1zZWN0aW9u&quot;&gt;Anaconda官方网站&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;在页面中找到适用于macOS且支持Apple Silicon（M2）的Anaconda安装包，通常为64位图形安装程序或命令行安装程序，文件扩展名为.pkg或.sh，如&lt;code&gt;Anaconda3-2023.03-macosx-arm64.pkg&lt;/code&gt;或&lt;code&gt;Miniforge3-MacOSX-arm64.sh&lt;/code&gt;。</summary>
    
    
    
    <category term="Python" scheme="https://markchyl.github.io/categories/Python/"/>
    
    
    <category term="工具" scheme="https://markchyl.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 与原生交互之路由跳转封装文档</title>
    <link href="https://markchyl.github.io/2025/01/08/Flutter-%E4%B8%8E%E5%8E%9F%E7%94%9F%E4%BA%A4%E4%BA%92%E4%B9%8B%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC%E5%B0%81%E8%A3%85%E6%96%87%E6%A1%A3/"/>
    <id>https://markchyl.github.io/2025/01/08/Flutter-%E4%B8%8E%E5%8E%9F%E7%94%9F%E4%BA%A4%E4%BA%92%E4%B9%8B%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC%E5%B0%81%E8%A3%85%E6%96%87%E6%A1%A3/</id>
    <published>2025-01-08T02:51:52.000Z</published>
    <updated>2025-01-08T02:51:52.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Flutter-与原生交互之路由跳转封装文档&quot;&gt;&lt;a href=&quot;#Flutter-与原生交互之路由跳转封装文档&quot; class=&quot;headerlink&quot; title=&quot;Flutter 与原生交互之路由跳转封装文档&quot;&gt;&lt;/a&gt;Flutter 与原生交互之路由跳转封装文档&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;在&lt;code&gt;Flutter&lt;/code&gt;项目中，当需要与原生（安卓和&lt;code&gt;iOS&lt;/code&gt;）进行交互，通过点击按钮向原生传递路由信息及数据，让原生进行对应路由跳转时，为了提高代码的复用性和可维护性，对相关功能进行封装是很有必要的。以下是在&lt;code&gt;Flutter&lt;/code&gt;端进行封装的详细步骤及示例代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一、创建MethodChannel与封装类&quot;&gt;&lt;a href=&quot;#一、创建MethodChannel与封装类&quot; class=&quot;headerlink&quot; title=&quot;一、创建MethodChannel与封装类&quot;&gt;&lt;/a&gt;一、创建&lt;code&gt;MethodChannel&lt;/code&gt;与封装类&lt;/h3&gt;</summary>
    
    
    
    <category term="Flutter" scheme="https://markchyl.github.io/categories/Flutter/"/>
    
    
    <category term="Flutter" scheme="https://markchyl.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 自定义命名路由跳转步骤</title>
    <link href="https://markchyl.github.io/2025/01/08/Flutter-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%91%BD%E5%90%8D%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC%E6%AD%A5%E9%AA%A4/"/>
    <id>https://markchyl.github.io/2025/01/08/Flutter-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%91%BD%E5%90%8D%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC%E6%AD%A5%E9%AA%A4/</id>
    <published>2025-01-08T01:45:10.000Z</published>
    <updated>2025-01-08T01:45:10.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Flutter-自定义命名路由跳转步骤&quot;&gt;&lt;a href=&quot;#Flutter-自定义命名路由跳转步骤&quot; class=&quot;headerlink&quot; title=&quot;Flutter 自定义命名路由跳转步骤&quot;&gt;&lt;/a&gt;&lt;code&gt;Flutter&lt;/code&gt; 自定义命名路由跳转步骤&lt;/h1&gt;&lt;p&gt;在 &lt;code&gt;Flutter&lt;/code&gt; 项目开发中，实现自定义命名路由跳转能让页面导航更灵活、易于管理。以下是详细的实现步骤，以及可能遇到的报错信息及处理方法。重点是我又不想使用第三方的路由插件，所以自己采用自带的路由 &lt;code&gt;Navigator&lt;/code&gt; 实现，手写一个。&lt;/p&gt;
&lt;h2 id=&quot;一、创建路由配置数据结构&quot;&gt;&lt;a href=&quot;#一、创建路由配置数据结构&quot; class=&quot;headerlink&quot; title=&quot;一、创建路由配置数据结构&quot;&gt;&lt;/a&gt;一、创建路由配置数据结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;定义RouteConfig类：</summary>
    
    
    
    <category term="Flutter" scheme="https://markchyl.github.io/categories/Flutter/"/>
    
    
    <category term="Flutter" scheme="https://markchyl.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>如何在macOS上安装使用scrcpy投屏软件？</title>
    <link href="https://markchyl.github.io/2025/01/02/%E5%A6%82%E4%BD%95%E5%9C%A8macOS%E4%B8%8A%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8scrcpy%E6%8A%95%E5%B1%8F%E8%BD%AF%E4%BB%B6%EF%BC%9F/"/>
    <id>https://markchyl.github.io/2025/01/02/%E5%A6%82%E4%BD%95%E5%9C%A8macOS%E4%B8%8A%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8scrcpy%E6%8A%95%E5%B1%8F%E8%BD%AF%E4%BB%B6%EF%BC%9F/</id>
    <published>2025-01-02T01:11:40.000Z</published>
    <updated>2025-01-02T01:11:40.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;如何在macOS上安装使用scrcpy投屏软件？&quot;&gt;&lt;a href=&quot;#如何在macOS上安装使用scrcpy投屏软件？&quot; class=&quot;headerlink&quot; title=&quot;如何在macOS上安装使用scrcpy投屏软件？&quot;&gt;&lt;/a&gt;如何在macOS上安装使用scrcpy投屏软件？&lt;/h2&gt;&lt;p&gt;以下是在macOS上安装使用scrcpy投屏软件的步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;安装前的准备&lt;/strong&gt;：确保你的macOS系统已经安装了Homebrew。Homebrew是macOS上的包管理器，很多软件都可以通过它来安装。如果你还没有安装Homebrew，可以访问&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9icmV3LnNoLw==&quot;&gt;Homebrew官方网站&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;，按照其提供的安装教程进行安装。</summary>
    
    
    
    <category term="Android" scheme="https://markchyl.github.io/categories/Android/"/>
    
    
    <category term="工具" scheme="https://markchyl.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg 命令使用的自学文档</title>
    <link href="https://markchyl.github.io/2024/12/31/FFmpeg-%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E7%9A%84%E8%87%AA%E5%AD%A6%E6%96%87%E6%A1%A3/"/>
    <id>https://markchyl.github.io/2024/12/31/FFmpeg-%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E7%9A%84%E8%87%AA%E5%AD%A6%E6%96%87%E6%A1%A3/</id>
    <published>2024-12-31T05:32:07.000Z</published>
    <updated>2024-12-31T05:32:07.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;以下是关于 FFmpeg 命令使用的自学文档，涵盖了基础命令、常用功能以及示例，适合自学使用。&lt;/p&gt;
&lt;h2 id=&quot;FFmpeg-简介&quot;&gt;&lt;a href=&quot;#FFmpeg-简介&quot; class=&quot;headerlink&quot; title=&quot;FFmpeg 简介&quot;&gt;&lt;/a&gt;FFmpeg 简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;FFmpeg 是一个开源的多媒体处理工具，支持音视频的编解码、转码、复用、解复用、流媒体处理等功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;官方网站：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9mZm1wZWcub3JnLw==&quot;&gt;https://ffmpeg.org&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="音视频" scheme="https://markchyl.github.io/categories/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
    
    <category term="FFmpeg" scheme="https://markchyl.github.io/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>网络状态自定义组件---自定义控件</title>
    <link href="https://markchyl.github.io/2024/07/11/%E7%BD%91%E7%BB%9C%E7%8A%B6%E6%80%81%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    <id>https://markchyl.github.io/2024/07/11/%E7%BD%91%E7%BB%9C%E7%8A%B6%E6%80%81%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/</id>
    <published>2024-07-11T10:40:36.000Z</published>
    <updated>2024-07-11T10:40:36.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;特点：独立性 + 可移植性&lt;br&gt;所有的逻辑都在这个控件中，直接在布局中添加就可以&lt;br&gt;技术点：协程CoroutineScope + 生命感知LifecycleOwner&lt;/p&gt;
&lt;p&gt;直接贴代码&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://markchyl.github.io/categories/Android/"/>
    
    
    <category term="自定义View" scheme="https://markchyl.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89View/"/>
    
  </entry>
  
  <entry>
    <title>Node.js 版本管理工具:nvm</title>
    <link href="https://markchyl.github.io/2024/06/13/Node-js-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-nvm/"/>
    <id>https://markchyl.github.io/2024/06/13/Node-js-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-nvm/</id>
    <published>2024-06-13T03:17:19.000Z</published>
    <updated>2024-06-13T03:17:19.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTgxNTg4L2FydGljbGUvZGV0YWlscy8xMzkyMjc1MDQ=&quot;&gt;参考原文&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;nvm 是一款 Node.js 版本管理工具，允许用户通过命令行快速安装、切换和管理不同的 Node.js 版本。&lt;/p&gt;
&lt;p&gt;图片&lt;img data-src=&quot;https://img-blog.csdnimg.cn/img_convert/49f67ddef04c0f95bf84de1a72a19853.png&quot;&gt;&lt;br&gt;（图片来自：github）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nvm 只适用于 macOS 和 Linux 用户的项目，如果是 Windows 用户，可以使用 nvm-windows 、nodist 或 nvs 替换。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="开发工具" scheme="https://markchyl.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="环境" scheme="https://markchyl.github.io/tags/%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>环境整理（pro、sit、uat、test、pre、dev、fat ）</title>
    <link href="https://markchyl.github.io/2024/06/04/%E7%8E%AF%E5%A2%83%E6%95%B4%E7%90%86%EF%BC%88pro%E3%80%81sit%E3%80%81uat%E3%80%81test%E3%80%81pre%E3%80%81dev%E3%80%81fat-%EF%BC%89/"/>
    <id>https://markchyl.github.io/2024/06/04/%E7%8E%AF%E5%A2%83%E6%95%B4%E7%90%86%EF%BC%88pro%E3%80%81sit%E3%80%81uat%E3%80%81test%E3%80%81pre%E3%80%81dev%E3%80%81fat-%EF%BC%89/</id>
    <published>2024-06-04T11:30:55.000Z</published>
    <updated>2024-06-04T11:30:55.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE1ODIxNDg3L2FydGljbGUvZGV0YWlscy8xMjk0ODU3NTA=&quot;&gt;原文链接&lt;i class=&quot;fa</summary>
        
      
    
    
    
    <category term="Android" scheme="https://markchyl.github.io/categories/Android/"/>
    
    
    <category term="术语" scheme="https://markchyl.github.io/tags/%E6%9C%AF%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>mac上打开安卓项目 The C compiler identification is Clang 14.0.6</title>
    <link href="https://markchyl.github.io/2024/06/04/mac%E4%B8%8A%E6%89%93%E5%BC%80%E5%AE%89%E5%8D%93%E9%A1%B9%E7%9B%AE-The-C-compiler-identification-is-Clang-14-0-6/"/>
    <id>https://markchyl.github.io/2024/06/04/mac%E4%B8%8A%E6%89%93%E5%BC%80%E5%AE%89%E5%8D%93%E9%A1%B9%E7%9B%AE-The-C-compiler-identification-is-Clang-14-0-6/</id>
    <published>2024-06-04T09:02:23.000Z</published>
    <updated>2024-06-04T09:02:23.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这个错误信息通常出现在尝试在Mac上构建一个Android项目时，特别是使用CMake作为构建系统时。它表明C编译器识别为Clang版本14.0.6。&lt;/p&gt;
&lt;p&gt;解释：&lt;br&gt;这个信息是CMake在尝试确定编译器标识和版本时输出的。通常，这个信息是正面的，表明CMake</summary>
        
      
    
    
    
    <category term="Android" scheme="https://markchyl.github.io/categories/Android/"/>
    
    
    <category term="error" scheme="https://markchyl.github.io/tags/error/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu中安装mysql</title>
    <link href="https://markchyl.github.io/2023/09/08/ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85mysql/"/>
    <id>https://markchyl.github.io/2023/09/08/ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85mysql/</id>
    <published>2023-09-08T09:12:03.000Z</published>
    <updated>2023-09-08T09:12:03.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;要在Ubuntu中安装MySQL，可以按照以下步骤进行操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开终端：你可以按下&lt;code&gt;Ctrl+Alt+T&lt;/code&gt;组合键来打开终端。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新包列表：首先，运行以下命令来确保你的系统上的包列表是最新的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="ubuntu" scheme="https://markchyl.github.io/categories/ubuntu/"/>
    
    
    <category term="mysql" scheme="https://markchyl.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>在Ubuntu上安装多个版本的Java JDK</title>
    <link href="https://markchyl.github.io/2023/09/08/%E5%9C%A8Ubuntu%E4%B8%8A%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84Java-JDK/"/>
    <id>https://markchyl.github.io/2023/09/08/%E5%9C%A8Ubuntu%E4%B8%8A%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84Java-JDK/</id>
    <published>2023-09-08T03:28:36.000Z</published>
    <updated>2023-09-08T03:28:36.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在Ubuntu上安装多个版本的Java JDK（Java Development Kit）是可行的，并且可以使用&lt;code&gt;update-alternatives&lt;/code&gt;来管理不同版本之间的切换。以下是一个示例，演示如何在Ubuntu上安装和管理多个Java JDK版本。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;检查系统上已安装的Java版本：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在终端中运行以下命令，以查看系统上已安装的Java版本：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;update-java-alternatives -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="ubuntu" scheme="https://markchyl.github.io/categories/ubuntu/"/>
    
    
    <category term="环境配置" scheme="https://markchyl.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cache入门使用教程</title>
    <link href="https://markchyl.github.io/2023/08/17/Spring-Cache%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>https://markchyl.github.io/2023/08/17/Spring-Cache%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2023-08-17T08:38:36.000Z</published>
    <updated>2023-08-17T08:38:36.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Spring-Cache入门使用教程&quot;&gt;&lt;a href=&quot;#Spring-Cache入门使用教程&quot; class=&quot;headerlink&quot; title=&quot;Spring Cache入门使用教程&quot;&gt;&lt;/a&gt;Spring Cache入门使用教程&lt;/h2&gt;&lt;h3</summary>
        
      
    
    
    
    <category term="Java" scheme="https://markchyl.github.io/categories/Java/"/>
    
    
    <category term="Cache" scheme="https://markchyl.github.io/tags/Cache/"/>
    
  </entry>
  
  <entry>
    <title>Redis操作命令的使用</title>
    <link href="https://markchyl.github.io/2023/08/11/Redis%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://markchyl.github.io/2023/08/11/Redis%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2023-08-11T06:22:24.000Z</published>
    <updated>2023-08-11T06:22:24.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Redis操作命令的使用笔记，涵盖基本数据类型的常见操作。以下是这份笔记：&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Redis-操作命令使用指南&quot;&gt;&lt;a href=&quot;#Redis-操作命令使用指南&quot; class=&quot;headerlink&quot; title=&quot;Redis 操作命令使用指南&quot;&gt;&lt;/a&gt;Redis 操作命令使用指南&lt;/h2&gt;&lt;h3 id=&quot;1-字符串（String）&quot;&gt;&lt;a href=&quot;#1-字符串（String）&quot; class=&quot;headerlink&quot; title=&quot;1. 字符串（String）&quot;&gt;&lt;/a&gt;1. 字符串（String）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;设置指定key的值: &lt;code&gt;SET key value&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;获取指定key的值: &lt;code&gt;GET key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置指定key的值，并将 key 的过期时间设为 seconds 秒：&lt;code&gt;SETEX key seconds value&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;只有在 key 不存在时设置 key 的值: &lt;code&gt;SETNX key value&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;追加字符串：&lt;code&gt;APPEND key value&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;获取字符串长度：&lt;code&gt;STRLEN key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;自增：&lt;code&gt;INCR key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;自增指定值：&lt;code&gt;INCRBY key increment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;自增浮点数：&lt;code&gt;INCRBYFLOAT key increment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置并获取旧值：&lt;code&gt;GETSET key value&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置多个键值对：&lt;code&gt;MSET key1 value1 [key2 value2 ...]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;获取多个键值：&lt;code&gt;MGET key1 [key2 ...]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置键的过期时间：&lt;code&gt;EXPIRE key seconds&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置键的过期时间（毫秒）：&lt;code&gt;PEXPIRE key milliseconds&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;获取键的剩余生存时间：&lt;code&gt;TTL key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;获取键的剩余生存时间（毫秒）：&lt;code&gt;PTTL key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;移除键的过期时间：&lt;code&gt;PERSIST key&lt;/code&gt;</summary>
    
    
    
    <category term="中间件" scheme="https://markchyl.github.io/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    
    <category term="Redis" scheme="https://markchyl.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu20.04虚拟机安装redis-3.2.8</title>
    <link href="https://markchyl.github.io/2023/08/11/ubuntu20-04%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85redis-3-2-8/"/>
    <id>https://markchyl.github.io/2023/08/11/ubuntu20-04%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85redis-3-2-8/</id>
    <published>2023-08-11T02:30:33.000Z</published>
    <updated>2023-08-11T02:30:33.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;安装 Redis-3.2.8 在 Ubuntu 20.04 虚拟机上可以按照以下步骤进行：&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在终端中安装 &lt;code&gt;build-essential&lt;/code&gt; 和 &lt;code&gt;tcl&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sqlCopy code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install build-essential tcl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="中间件" scheme="https://markchyl.github.io/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    
    <category term="Linux" scheme="https://markchyl.github.io/tags/Linux/"/>
    
    <category term="Redis" scheme="https://markchyl.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装Redis</title>
    <link href="https://markchyl.github.io/2023/08/11/Mac%E5%AE%89%E8%A3%85Redis/"/>
    <id>https://markchyl.github.io/2023/08/11/Mac%E5%AE%89%E8%A3%85Redis/</id>
    <published>2023-08-11T02:29:03.000Z</published>
    <updated>2023-08-11T02:29:03.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;要在Mac上安装&lt;code&gt;Redis&lt;/code&gt;，请按照以下步骤进行操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开终端应用程序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;Homebrew，Homebrew&lt;/code&gt;是一个Mac上的包管理器。在终端中运行以下命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/bin/bash -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;quot;&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="中间件" scheme="https://markchyl.github.io/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    
    <category term="Redis" scheme="https://markchyl.github.io/tags/Redis/"/>
    
    <category term="Mac" scheme="https://markchyl.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>实现公共字段的自动填充逻辑</title>
    <link href="https://markchyl.github.io/2023/08/01/%E5%AE%9E%E7%8E%B0%E5%85%AC%E5%85%B1%E5%AD%97%E6%AE%B5%E7%9A%84%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85%E9%80%BB%E8%BE%91/"/>
    <id>https://markchyl.github.io/2023/08/01/%E5%AE%9E%E7%8E%B0%E5%85%AC%E5%85%B1%E5%AD%97%E6%AE%B5%E7%9A%84%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85%E9%80%BB%E8%BE%91/</id>
    <published>2023-08-01T01:48:12.000Z</published>
    <updated>2023-08-01T01:48:12.000Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;需要实现的效果&quot;&gt;&lt;a href=&quot;#需要实现的效果&quot; class=&quot;headerlink&quot; title=&quot;需要实现的效果&quot;&gt;&lt;/a&gt;需要实现的效果&lt;/h3&gt;&lt;p&gt;公共字段自动填充&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题分析&lt;/li&gt;
&lt;li&gt;实现思路&lt;/li&gt;
&lt;li&gt;代码开发&lt;/li&gt;
&lt;li&gt;功能测试&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h3&gt;&lt;p&gt;多张业务表中的公共字段：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题：代码冗余、不便于后期维护&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://markchyl.github.io/categories/Java/"/>
    
    
    <category term="Spring Boot、AOP、注解" scheme="https://markchyl.github.io/tags/Spring-Boot%E3%80%81AOP%E3%80%81%E6%B3%A8%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>macbook上安装nginx和配置步骤</title>
    <link href="https://markchyl.github.io/2023/07/27/macbook%E4%B8%8A%E5%AE%89%E8%A3%85nginx%E5%92%8C%E9%85%8D%E7%BD%AE%E6%AD%A5%E9%AA%A4/"/>
    <id>https://markchyl.github.io/2023/07/27/macbook%E4%B8%8A%E5%AE%89%E8%A3%85nginx%E5%92%8C%E9%85%8D%E7%BD%AE%E6%AD%A5%E9%AA%A4/</id>
    <published>2023-07-27T03:01:15.000Z</published>
    <updated>2023-07-27T03:01:15.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Nginx-笔记&quot;&gt;&lt;a href=&quot;#Nginx-笔记&quot; class=&quot;headerlink&quot; title=&quot;Nginx 笔记&quot;&gt;&lt;/a&gt;Nginx 笔记&lt;/h2&gt;&lt;h3 id=&quot;1-安装-Homebrew&quot;&gt;&lt;a href=&quot;#1-安装-Homebrew&quot; class=&quot;headerlink&quot; title=&quot;1. 安装 Homebrew&quot;&gt;&lt;/a&gt;1. 安装 Homebrew&lt;/h3&gt;&lt;p&gt;在 Mac 上使用以下命令安装 Homebrew：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/bin/bash -c &lt;span class=&quot;string&quot;&gt;&amp;quot;&lt;span class=&quot;subst&quot;&gt;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="服务器" scheme="https://markchyl.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="Nginx" scheme="https://markchyl.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>go的简介</title>
    <link href="https://markchyl.github.io/2023/07/03/go%E7%9A%84%E7%AE%80%E4%BB%8B/"/>
    <id>https://markchyl.github.io/2023/07/03/go%E7%9A%84%E7%AE%80%E4%BB%8B/</id>
    <published>2023-07-03T03:17:59.000Z</published>
    <updated>2023-07-03T03:17:59.000Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;go的简介&quot;&gt;&lt;a href=&quot;#go的简介&quot; class=&quot;headerlink&quot; title=&quot;go的简介&quot;&gt;&lt;/a&gt;go的简介&lt;/h3&gt;&lt;p&gt;Go（也被称为Golang）是一种由Google开发的开源编程语言。Go的设计目标是提供简单、高效、可靠的编程体验，同时具备并发性和可扩展性。&lt;/p&gt;
&lt;p&gt;以下是Go语言的一些关键特点和优势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;简洁易学：Go语言采用了简洁的语法和设计，减少了冗余和复杂性，使其易于学习和上手。它拥有清晰的语法结构和直观的语义，使得编写和阅读代码变得简单。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;并发编程：Go语言内置了轻量级的并发模型，通过goroutine和channel机制实现并发编程变得简单和高效。它使得编写并发代码变得容易，并能充分利用多核处理器的优势。&lt;/p&gt;</summary>
    
    
    
    <category term="Go" scheme="https://markchyl.github.io/categories/Go/"/>
    
    
    <category term="基础知识" scheme="https://markchyl.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu中安装的GoLAnd如何配置开发环境</title>
    <link href="https://markchyl.github.io/2023/06/29/ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85%E7%9A%84GoLAnd%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://markchyl.github.io/2023/06/29/ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85%E7%9A%84GoLAnd%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2023-06-29T05:07:44.000Z</published>
    <updated>2023-06-29T05:07:44.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;安装 GoLand IDE 并配置开发环境的步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载和安装 GoLand：前往 JetBrains 官方网站（&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9nby8lRUYlQkMlODklRTQlQjglOEIlRTglQkQlQkQlRTklODAlODIlRTclOTQlQTglRTQlQkElOEU=&quot;&gt;https://www.jetbrains.com/go/）下载适用于&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; Linux 的 GoLand 安装包。解压下载的安装包，并进入解压后的目录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动 GoLand：在终端中进入 GoLand 安装目录的 &lt;code&gt;bin&lt;/code&gt; 子目录，并运行以下命令启动 GoLand：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.&amp;#x2F;goland.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://markchyl.github.io/categories/Linux/"/>
    
    
    <category term="环境配置" scheme="https://markchyl.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
</feed>
